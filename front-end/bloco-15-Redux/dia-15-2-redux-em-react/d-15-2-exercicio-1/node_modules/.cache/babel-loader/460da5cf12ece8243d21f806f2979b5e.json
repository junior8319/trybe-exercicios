{"ast":null,"code":"// reducers/myReducer.js\nconst INITIAL_STATE = {\n  state: ''\n};\n\nfunction myReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'NEW_ACTION':\n      return {\n        state: action.state\n      };\n    // Nesse caso a utilização do spread operator (...) não é necessário, pois estamos trabalhando com uma única chave no estado.\n    // Mas caso tenha dúvidas sobre a utilização, consulte a documentação do Redux https://redux.js.org/recipes/using-object-spread-operator\n\n    default:\n      return state;\n  }\n}\n\nexport default myReducer;","map":{"version":3,"sources":["/home/junior/estudos/trybe-exercicios/front-end/bloco-15-Redux/dia-15-2-redux-em-react/d-15-2-exercicio-1/src/redux/reducers/myReducer.js"],"names":["INITIAL_STATE","state","myReducer","action","type"],"mappings":"AACA;AAEA,MAAMA,aAAa,GAAG;AACpBC,EAAAA,KAAK,EAAE;AADa,CAAtB;;AAIA,SAASC,SAAT,GAAkD;AAAA,MAA/BD,KAA+B,uEAAvBD,aAAuB;AAAA,MAARG,MAAQ;;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,YAAL;AACE,aAAO;AAAEH,QAAAA,KAAK,EAAEE,MAAM,CAACF;AAAhB,OAAP;AACA;AACA;;AACF;AACE,aAAOA,KAAP;AANJ;AAQD;;AAED,eAAeC,SAAf","sourcesContent":["\n// reducers/myReducer.js\n\nconst INITIAL_STATE = {\n  state: '',\n};\n\nfunction myReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case 'NEW_ACTION':\n      return { state: action.state };\n      // Nesse caso a utilização do spread operator (...) não é necessário, pois estamos trabalhando com uma única chave no estado.\n      // Mas caso tenha dúvidas sobre a utilização, consulte a documentação do Redux https://redux.js.org/recipes/using-object-spread-operator\n    default:\n      return state;\n  }\n}\n\nexport default myReducer;"]},"metadata":{},"sourceType":"module"}